name: Build Discord Bot

on:
  push:
    tags:
      - "discord-v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: remove158/discord

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            apps/discord
          sparse-checkout-cone-mode: false

      - name: Extract version from tag
        id: version
        run: |
          # Extract version from tag (e.g., discord-v1.0.0 -> v1.0.0)
          VERSION=${GITHUB_REF_NAME#discord-}
          # Also create latest tag
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION" >> $GITHUB_OUTPUT
          echo "latest_tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build and push discord
        uses: docker/build-push-action@v6
        with:
          context: apps/discord
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.version.outputs.version_tag }}
            ${{ steps.version.outputs.latest_tag }}
          push: true
          labels: |
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
